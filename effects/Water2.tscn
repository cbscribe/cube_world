[gd_scene load_steps=5 format=2]

[ext_resource path="res://effects/YhNiKlc.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

uniform vec4 water_color : hint_color;
uniform vec4 foam_color : hint_color;
uniform float foam_max_threshold = 0.5;
uniform sampler2D displace_texture : hint_white;
uniform float displace_amount = 0.6;
uniform float uv_mult = 5.0;
uniform float near = 0.15;
uniform float far = 200.0;

float linearize(float c_depth) {
	c_depth = 2.0 * c_depth - 1.0;
	return near * far / (far + c_depth * (near - far));
}
 
void fragment()
{
	float zdepth = linearize(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float zpos = linearize(FRAGCOORD.z);
	float diff = zdepth - zpos;
 
	vec2 displ = texture(displace_texture, UV * uv_mult - TIME / 17.0).rg;
	displ = ((displ * 2.0) - 1.0) * displace_amount;
	diff += displ.x;
 
	vec4 col = mix(foam_color, water_color, step(foam_max_threshold, diff));
	ALBEDO = col.rgb;
 	ALPHA = col.a;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/water_color = Color( 0.231373, 0.541176, 0.670588, 0.854902 )
shader_param/foam_color = Color( 1, 1, 1, 1 )
shader_param/foam_max_threshold = 1.0
shader_param/displace_amount = 3.0
shader_param/uv_mult = 30.0
shader_param/near = 0.15
shader_param/far = 200.0
shader_param/displace_texture = ExtResource( 1 )

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 2 )
size = Vector2( 50, 50 )

[node name="Water2" type="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 11, -2, 6 )
mesh = SubResource( 3 )
material/0 = null
__meta__ = {
"_edit_lock_": true
}
